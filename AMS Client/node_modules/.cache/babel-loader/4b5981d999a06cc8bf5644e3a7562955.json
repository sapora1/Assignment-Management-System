{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rarya\\\\OneDrive\\\\Desktop\\\\git hashcode\\\\AMS\\\\AMS Client\\\\src\\\\components\\\\Assigned.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport \"./DashboardStyle.css\";\nimport { Grid } from \"@material-ui/core\";\nimport { ExitToApp } from \"@material-ui/icons\";\nimport { history } from '../History';\nimport { useSelector } from 'react-redux';\nimport Axios from 'axios';\nimport { useEffect } from 'react';\nimport { Card, CardContent } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Chip } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Assigned = () => {\n  _s();\n\n  const student = useSelector(state => state.student[0]);\n  const [assignedData, setAssignedData] = React.useState();\n  const pathname = window.location.pathname;\n  const Id = pathname.split('/')[1];\n  console.log(Id);\n\n  const logout = () => {\n    history.push({\n      pathname: `/`\n    });\n  };\n\n  useEffect(() => {\n    if (!student) {\n      console.log('fetch');\n      Axios.post(\"http://localhost:3001/assigned\", {\n        Student_id: Id\n      }).then(response => {\n        console.log(response.data[0]);\n        setAssignedData(response.data[0]);\n      });\n    } else {\n      setAssignedData(student[0]);\n    }\n  }, []);\n\n  const assigned = () => {\n    console.log(\"click\");\n    history.push({\n      pathname: `/${Id}/assigned`\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"div\",\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: Array.isArray(assignedData) && assignedData.map((value, index) => {\n        const {\n          Assignment\n        } = \"Assignment\";\n        const Ass = [[`${Assignment}${value.assignment_id}`], [`${endDate}${value.endDate}`], [`${status}${value.status}`]];\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            children: Ass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Assigned, \"osOJ7yeeFGHFg6Rz2s3htNtAPME=\", false, function () {\n  return [useSelector];\n});\n\n_c = Assigned;\nexport default Assigned;\n\nvar _c;\n\n$RefreshReg$(_c, \"Assigned\");","map":{"version":3,"sources":["C:/Users/rarya/OneDrive/Desktop/git hashcode/AMS/AMS Client/src/components/Assigned.js"],"names":["React","Grid","ExitToApp","history","useSelector","Axios","useEffect","Card","CardContent","Typography","Chip","Assigned","student","state","assignedData","setAssignedData","useState","pathname","window","location","Id","split","console","log","logout","push","post","Student_id","then","response","data","assigned","Array","isArray","map","value","index","Assignment","Ass","assignment_id","endDate","status"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport \"./DashboardStyle.css\";\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { ExitToApp } from \"@material-ui/icons\"\r\nimport { history } from '../History';\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Chip } from '@material-ui/core';\r\n\r\nconst Assigned = () => {\r\n    const student = useSelector((state) => (state.student[0]));\r\n    const [assignedData, setAssignedData] = React.useState();\r\n    const pathname = window.location.pathname;\r\n    const Id = pathname.split('/')[1]; console.log(Id)\r\n\r\n    const logout = () => {\r\n        history.push({\r\n            pathname: `/`,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!student) {\r\n            console.log('fetch')\r\n            Axios.post(\"http://localhost:3001/assigned\", {\r\n                Student_id: Id\r\n            }).then((response) => {\r\n                console.log(response.data[0]);\r\n                setAssignedData(response.data[0]);\r\n            })\r\n        }\r\n        else {\r\n            setAssignedData(student[0]);\r\n        }\r\n    }, []);\r\n\r\n    const assigned = () => {\r\n        console.log(\"click\")\r\n        history.push({\r\n            pathname: `/${Id}/assigned`,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card >\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                    title\r\n                </Typography>\r\n                <Typography variant=\"body2\" >\r\n                    description\r\n                </Typography>\r\n            </CardContent>\r\n            <CardContent  >\r\n                {Array.isArray(assignedData) && assignedData.map((value, index) => {\r\n                    const { Assignment } = \"Assignment\";\r\n                    const Ass = [[`${Assignment}${value.assignment_id}`],\r\n                    [`${endDate}${value.endDate}`],\r\n                    [`${status}${value.status}`],\r\n                    ]\r\n                    return(\r\n                    <React.Fragment key={index}>\r\n                        <Typography variant=\"overline\">{Ass}</Typography>\r\n                        <Chip label={value}></Chip>\r\n                    </React.Fragment>)\r\n            })}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Assigned;\r\n"]},"metadata":{},"sourceType":"module"}