{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rarya\\\\OneDrive\\\\Desktop\\\\git hashcode\\\\AMS\\\\AMS Client\\\\src\\\\components\\\\Assigned.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport \"./DashboardStyle.css\";\nimport { Grid } from \"@material-ui/core\";\nimport { ExitToApp } from \"@material-ui/icons\";\nimport { history } from '../History';\nimport { useSelector } from 'react-redux';\nimport Axios from 'axios';\nimport { useEffect } from 'react';\nimport { Card, CardContent } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Assigned = () => {\n  _s();\n\n  const student = useSelector(state => state.student[0]);\n  const [studentData, setStudentData] = React.useState();\n  const [studentName, setStudentName] = React.useState();\n  const pathname = window.location.pathname;\n  const Id = pathname.split('/')[1];\n  console.log(Id);\n\n  const logout = () => {\n    history.push({\n      pathname: `/`\n    });\n  };\n\n  useEffect(() => {\n    if (!student) {\n      console.log('fetch');\n      Axios.post(\"http://localhost:3001/student\", {\n        Student_id: Id\n      }).then(response => {\n        console.log(response.data[0]);\n        setStudentData(response.data[0]);\n        setStudentName(response.data[0].Name);\n      });\n    } else {\n      setStudentData(student[0]);\n      setStudentName(student[0].Name);\n    }\n  }, []);\n\n  const assigned = () => {\n    console.log(\"click\");\n    history.push({\n      pathname: `/${Id}/assigned`\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"div\",\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: Array.isArray(batches) && batches.map((value, index) => {\n        const {\n          startDate,\n          endDate,\n          status\n        } = INTERNSHIP_BATCH_DETAILS;\n        const batchSection = [[`${startDate}${value.startDate}`], [`${endDate}${value.endDate}`], [`${status}${value.status}`]];\n        return /*#__PURE__*/_jsxDEV(BatchSection, {\n          // details={batchSection\n          batchNo: `Batch ${index + 1}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Assigned, \"F7D7sk6V1MsDzuzOtH5ZEnzBjI8=\", false, function () {\n  return [useSelector];\n});\n\n_c = Assigned;\nexport default Assigned;\n\nvar _c;\n\n$RefreshReg$(_c, \"Assigned\");","map":{"version":3,"sources":["C:/Users/rarya/OneDrive/Desktop/git hashcode/AMS/AMS Client/src/components/Assigned.js"],"names":["React","Grid","ExitToApp","history","useSelector","Axios","useEffect","Card","CardContent","Typography","Assigned","student","state","studentData","setStudentData","useState","studentName","setStudentName","pathname","window","location","Id","split","console","log","logout","push","post","Student_id","then","response","data","Name","assigned","Array","isArray","batches","map","value","index","startDate","endDate","status","INTERNSHIP_BATCH_DETAILS","batchSection"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport \"./DashboardStyle.css\";\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { ExitToApp } from \"@material-ui/icons\"\r\nimport { history } from '../History';\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport { Card,CardContent } from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst Assigned = ()=> {\r\n    const student = useSelector((state) => (state.student[0]));\r\n    const [studentData, setStudentData] = React.useState();\r\n    const [studentName, setStudentName] = React.useState();\r\n    const pathname = window.location.pathname;\r\n    const Id = pathname.split('/')[1]; console.log(Id)\r\n\r\n    const logout = () => {\r\n        history.push({\r\n            pathname: `/`,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!student) {\r\n            console.log('fetch')\r\n            Axios.post(\"http://localhost:3001/student\", {\r\n                Student_id: Id\r\n            }).then((response) => {\r\n                console.log(response.data[0]);\r\n                setStudentData(response.data[0]);\r\n                setStudentName(response.data[0].Name);\r\n            })\r\n        }\r\n        else {\r\n            setStudentData(student[0]);\r\n            setStudentName(student[0].Name);\r\n        }\r\n    }, []);\r\n\r\n    const assigned =()=>{\r\n        console.log(\"click\")\r\n        history.push({\r\n            pathname: `/${Id}/assigned`,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card >\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              title\r\n            </Typography>\r\n            <Typography variant=\"body2\" >\r\n              description\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent  >\r\n            {Array.isArray(batches)&&batches.map((value, index) => {\r\n              const { startDate, endDate, status } = INTERNSHIP_BATCH_DETAILS;\r\n              const batchSection = [[`${startDate}${value.startDate}`],\r\n              [`${endDate}${value.endDate}`],\r\n              [`${status}${value.status}`],\r\n              ]\r\n              return <BatchSection key={index}\r\n                // details={batchSection\r\n                batchNo={`Batch ${index + 1}`}\r\n              />\r\n            })}\r\n          </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Assigned;\r\n"]},"metadata":{},"sourceType":"module"}