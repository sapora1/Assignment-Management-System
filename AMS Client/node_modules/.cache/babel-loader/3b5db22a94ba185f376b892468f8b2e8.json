{"ast":null,"code":"/**\n * @memberof module:compressed-json.converters\n * @namespace stringConverter\n */\n'use strict';\n\nimport Prefixes from '../constants/Prefixes';\nvar PrefixValues = Object.values(Prefixes);\n/** @lends module:compressed-json.converters.stringConverter */\n\nvar stringConverter = {\n  toPointer: function toPointer(index) {\n    return Prefixes.POINTER_PREFIX + index.toString(36);\n  },\n  toEscaped: function toEscaped(raw) {\n    var needsEscape = PrefixValues.some(function (v) {\n      return raw.startsWith(v);\n    });\n    return needsEscape ? Prefixes.ESCAPED_PREFIX + raw : raw;\n  },\n  fromEscaped: function fromEscaped(escaped) {\n    var needsRestore = escaped.startsWith(Prefixes.ESCAPED_PREFIX);\n    return needsRestore ? escaped.slice(Prefixes.ESCAPED_PREFIX.length) : escaped;\n  },\n  fromPointer: function fromPointer(pointer) {\n    return pointer.slice(Prefixes.POINTER_PREFIX.length);\n  },\n  isPointer: function isPointer(value) {\n    return value.startsWith(Prefixes.POINTER_PREFIX);\n  }\n};\nexport default stringConverter;","map":{"version":3,"sources":["C:\\Users\\rarya\\OneDrive\\Desktop\\git hashcode\\AMS\\AMS Client\\node_modules\\compressed-json\\lib\\converters\\stringConverter.js"],"names":["Prefixes","PrefixValues","Object","stringConverter","toPointer","index","toEscaped","needsEscape","raw","fromEscaped","needsRestore","escaped","fromPointer","pointer","isPointer","value"],"mappings":"AAAA;;;;AAIA;;AAEA,OAAMA,QAAN,MAAA,uBAAA;AAEA,IAAMC,YAAY,GAAGC,MAAM,CAANA,MAAAA,CAArB,QAAqBA,CAArB;AAEA;;AACA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,KAAA,EAAA;AAAA,WAAWJ,QAAQ,CAARA,cAAAA,GAA2BK,KAAD,CAAA,QAACA,CAAtC,EAAsCA,CAAtC;AADW,GAAA;AAEtBC,EAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,GAAA,EAAS;AAClB,QAAMC,WAAW,GAAG,YAAY,CAAZ,IAAA,CAAkB,UAAA,CAAA,EAAA;AAAA,aAAOC,GAAG,CAAHA,UAAAA,CAAP,CAAOA,CAAP;AAAtC,KAAoB,CAApB;AACA,WAAOD,WAAW,GAAGP,QAAQ,CAARA,cAAAA,GAAH,GAAA,GAAlB,GAAA;AAJoB,GAAA;AAMtBS,EAAAA,WAAW,EAAE,SAAA,WAAA,CAAA,OAAA,EAAa;AACxB,QAAMC,YAAY,GAAGC,OAAO,CAAPA,UAAAA,CAAmBX,QAAQ,CAAhD,cAAqBW,CAArB;AACA,WAAOD,YAAY,GAAGC,OAAO,CAAPA,KAAAA,CAAcX,QAAQ,CAARA,cAAAA,CAAjB,MAAGW,CAAH,GAAnB,OAAA;AARoB,GAAA;AAUtBC,EAAAA,WAAW,EAAE,SAAA,WAAA,CAAA,OAAA,EAAa;AACxB,WAAOC,OAAO,CAAPA,KAAAA,CAAcb,QAAQ,CAARA,cAAAA,CAArB,MAAOa,CAAP;AAXoB,GAAA;AAatBC,EAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,KAAA,EAAW;AACpB,WAAOC,KAAK,CAALA,UAAAA,CAAiBf,QAAQ,CAAhC,cAAOe,CAAP;AACD;AAfqB,CAAxB","sourcesContent":["/**\n * @memberof module:compressed-json.converters\n * @namespace stringConverter\n */\n'use strict'\n\nconst Prefixes = require('../constants/Prefixes')\n\nconst PrefixValues = Object.values(Prefixes)\n\n/** @lends module:compressed-json.converters.stringConverter */\nconst stringConverter = {\n  toPointer: (index) => Prefixes.POINTER_PREFIX + (index).toString(36),\n  toEscaped: (raw) => {\n    const needsEscape = PrefixValues.some((v) => raw.startsWith(v))\n    return needsEscape ? Prefixes.ESCAPED_PREFIX + raw : raw\n  },\n  fromEscaped: (escaped) => {\n    const needsRestore = escaped.startsWith(Prefixes.ESCAPED_PREFIX)\n    return needsRestore ? escaped.slice(Prefixes.ESCAPED_PREFIX.length) : escaped\n  },\n  fromPointer: (pointer) => {\n    return pointer.slice(Prefixes.POINTER_PREFIX.length)\n  },\n  isPointer: (value) => {\n    return value.startsWith(Prefixes.POINTER_PREFIX)\n  }\n}\n\nmodule.exports = stringConverter\n"]},"metadata":{},"sourceType":"module"}